{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  overflow: hidden;\\n\\n  & .globalAddButton {\\n    position: absolute;\\n    top: 0;\\n    z-index: 5;\\n    left: 0;\\n\\n    &#addList {\\n      left: 80px;\\n    }\\n  }\\n\\n  .interactionMessage {\\n    position: absolute;\\n    top: 20px;\\n    z-index: 5;\\n    left: 10px;\\n    font-size: 11px;\\n    color: red;\\n  }\\n\\n  .icons {\\n    transition: all 250ms;\\n    &:hover {\\n      cursor: pointer;\\n      opacity: 0.5;\\n    }\\n  }\\n\\n  .dropzone {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    height: 50px;\\n    border: 1px dashed black;\\n    position: relative;\\n    transition: opacity 500ms;\\n\\n    &.hovering {\\n      opacity: 0.5;\\n    }\\n\\n    & .dropzoneStatus {\\n      background-color: rgba(0, 0, 0, 0.5);\\n      height: 100%;\\n      width: 100%;\\n      position: absolute;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport socketIOClient from 'socket.io-client';\nimport { getCursorElement, supportsMediaRecorder } from './helper';\nimport maxBy from 'lodash/maxBy';\nimport DroppableBackground from './DroppableBackground';\nimport DraggableItems from './DraggableItems';\nvar socket = socketIOClient(\"\".concat(false ? 'wss' : 'ws', \"://\").concat(window.location.host), {\n  secure: false\n});\nvar DEFAULT_POSITION = {\n  top: 180,\n  left: 20\n};\nvar LIST_DEFAULT_POSITION = {\n  top: 20,\n  left: 180\n};\nvar StyledApp = styled.div(_templateObject());\n/*\n  TODO LIST:\n  - emit message on socket to block box or card if it is being recorded on another side (currently blocks all buttons)\n  - display cursor (https://stackoverflow.com/questions/34162200/displaying-cursor-on-every-connected-client-in-socket-io)\n*/\n\nvar App = function App() {\n  var mediaRecorderIsSupported = supportsMediaRecorder();\n\n  var _useState = useState(!supportsMediaRecorder),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullDisable = _useState2[0],\n      setDisableAll = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      anotherUserIsRecording = _useState4[0],\n      setIsRecording = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      boxes = _useState6[0],\n      setBoxes = _useState6[1]; // if mediaRecorder is not supported, then set alert\n\n\n  useEffect(function () {\n    if (!mediaRecorderIsSupported) {\n      alert('User Media API not supported.');\n    }\n  }, [mediaRecorderIsSupported]); // all socket responses handled here\n\n  useEffect(function () {\n    socket.on('connect', function (data) {\n      console.log('WebSocket Client Connected');\n    });\n    socket.on('receivingChanges', function (data) {\n      var res = data || {\n        lists: [],\n        boxes: []\n      };\n\n      if (res.boxes) {\n        setBoxes(res.boxes);\n      }\n    });\n    socket.on('recordingInProgress', function (data) {\n      var res = data || {\n        recording: false\n      };\n      console.log('res', res);\n      setDisableAll(res.recording);\n      setIsRecording(res.recording);\n    });\n    socket.on('draw_cursor', function (data) {\n      var res = data;\n      var el = getCursorElement(res.id);\n      el.style.top = res.line[0].x;\n      el.style.left = res.line[0].y;\n    });\n  }, []);\n\n  var addItem = function addItem(obj) {\n    return function () {\n      var maxBoxId = maxBy(boxes, 'id');\n      var boxId = !maxBoxId ? 0 : maxBoxId.id + 1;\n      var newBoxes = [].concat(_toConsumableArray(boxes), [_objectSpread(_objectSpread({\n        id: boxId\n      }, obj), {}, {\n        title: \"box #\".concat(boxId)\n      })]);\n      updateBoxes(newBoxes);\n    };\n  };\n\n  var updateBoxes = function updateBoxes(updatedBoxes) {\n    setBoxes(updatedBoxes);\n    socket.emit('sendingChanges', {\n      boxes: updatedBoxes\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(StyledApp, null, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"addCard\",\n    className: \"globalAddButton\",\n    disabled: fullDisable,\n    onClick: addItem(_objectSpread({\n      type: 'card',\n      isListItem: false\n    }, DEFAULT_POSITION))\n  }, \"Add Card\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"addList\",\n    className: \"globalAddButton\",\n    disabled: fullDisable,\n    onClick: addItem(_objectSpread({\n      type: 'list',\n      isListItem: false,\n      cards: []\n    }, LIST_DEFAULT_POSITION))\n  }, \"Add List\"), anotherUserIsRecording && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"interactionMessage\"\n  }, \"Another user is recording\"), /*#__PURE__*/React.createElement(DroppableBackground, {\n    boxes: boxes,\n    updateBoxes: updateBoxes,\n    setDisableAll: setDisableAll\n  }), boxes.map(function (box) {\n    return /*#__PURE__*/React.createElement(DraggableItems, {\n      key: box.id,\n      setDisableAll: setDisableAll,\n      fullDisable: fullDisable,\n      updateBoxes: updateBoxes,\n      currentBox: box,\n      boxes: boxes,\n      socket: socket\n    });\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/mfjvacas/Documents/Dev/GitHub/projects/mapstereo-client/components/App.tsx"],"names":["React","useState","useEffect","styled","socketIOClient","getCursorElement","supportsMediaRecorder","maxBy","DroppableBackground","DraggableItems","socket","window","location","host","secure","DEFAULT_POSITION","top","left","LIST_DEFAULT_POSITION","StyledApp","div","App","mediaRecorderIsSupported","fullDisable","setDisableAll","anotherUserIsRecording","setIsRecording","boxes","setBoxes","alert","on","data","console","log","res","lists","recording","el","id","style","line","x","y","addItem","obj","maxBoxId","boxId","newBoxes","title","updateBoxes","updatedBoxes","emit","type","isListItem","cards","map","box"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport update from 'immutability-helper';\nimport socketIOClient from 'socket.io-client';\nimport { getCursorElement, supportsMediaRecorder } from './helper';\nimport maxBy from 'lodash/maxBy';\nimport DroppableBackground from './DroppableBackground';\nimport DraggableItems from './DraggableItems';\nimport Box from './types/box';\n\nconst socket = socketIOClient(\n  `${process.env.NODE_ENV === 'production' ? 'wss' : 'ws'}://${\n    window.location.host\n  }`,\n  {\n    secure: process.env.NODE_ENV === 'production',\n  }\n);\n\nconst DEFAULT_POSITION = {\n  top: 180,\n  left: 20,\n};\n\nconst LIST_DEFAULT_POSITION = {\n  top: 20,\n  left: 180,\n};\n\nconst StyledApp = styled.div`\n  position: relative;\n  overflow: hidden;\n\n  & .globalAddButton {\n    position: absolute;\n    top: 0;\n    z-index: 5;\n    left: 0;\n\n    &#addList {\n      left: 80px;\n    }\n  }\n\n  .interactionMessage {\n    position: absolute;\n    top: 20px;\n    z-index: 5;\n    left: 10px;\n    font-size: 11px;\n    color: red;\n  }\n\n  .icons {\n    transition: all 250ms;\n    &:hover {\n      cursor: pointer;\n      opacity: 0.5;\n    }\n  }\n\n  .dropzone {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 50px;\n    border: 1px dashed black;\n    position: relative;\n    transition: opacity 500ms;\n\n    &.hovering {\n      opacity: 0.5;\n    }\n\n    & .dropzoneStatus {\n      background-color: rgba(0, 0, 0, 0.5);\n      height: 100%;\n      width: 100%;\n      position: absolute;\n    }\n  }\n`;\n\n/*\n  TODO LIST:\n  - emit message on socket to block box or card if it is being recorded on another side (currently blocks all buttons)\n  - display cursor (https://stackoverflow.com/questions/34162200/displaying-cursor-on-every-connected-client-in-socket-io)\n*/\n\nconst App = () => {\n  const mediaRecorderIsSupported = supportsMediaRecorder();\n  const [fullDisable, setDisableAll] = useState(!supportsMediaRecorder);\n  const [anotherUserIsRecording, setIsRecording] = useState(false);\n  const [boxes, setBoxes] = useState([]);\n\n  // if mediaRecorder is not supported, then set alert\n  useEffect(() => {\n    if (!mediaRecorderIsSupported) {\n      alert('User Media API not supported.');\n    }\n  }, [mediaRecorderIsSupported]);\n\n  // all socket responses handled here\n  useEffect(() => {\n    socket.on('connect', (data) => {\n      console.log('WebSocket Client Connected');\n    });\n    socket.on('receivingChanges', (data) => {\n      const res = data || { lists: [], boxes: [] };\n\n      if (res.boxes) {\n        setBoxes(res.boxes);\n      }\n    });\n    socket.on('recordingInProgress', (data) => {\n      const res = data || { recording: false };\n\n      console.log('res', res);\n\n      setDisableAll(res.recording);\n      setIsRecording(res.recording);\n    });\n    socket.on('draw_cursor', (data) => {\n      const res = data;\n      const el = getCursorElement(res.id) as HTMLElement;\n      el.style.top = res.line[0].x;\n      el.style.left = res.line[0].y;\n    });\n  }, []);\n\n  const addItem = (obj) => () => {\n    const maxBoxId = maxBy(boxes, 'id');\n    const boxId = !maxBoxId ? 0 : maxBoxId.id + 1;\n    const newBoxes = [\n      ...boxes,\n      {\n        id: boxId,\n        ...obj,\n        title: `box #${boxId}`,\n      },\n    ];\n    updateBoxes(newBoxes);\n  };\n\n  const updateBoxes = (updatedBoxes: Array<Box>): void => {\n    setBoxes(updatedBoxes);\n    socket.emit('sendingChanges', {\n      boxes: updatedBoxes,\n    });\n  };\n\n  return (\n    <StyledApp>\n      <button\n        id=\"addCard\"\n        className=\"globalAddButton\"\n        disabled={fullDisable}\n        onClick={addItem({\n          type: 'card',\n          isListItem: false,\n          ...DEFAULT_POSITION,\n        })}\n      >\n        Add Card\n      </button>\n      <button\n        id=\"addList\"\n        className=\"globalAddButton\"\n        disabled={fullDisable}\n        onClick={addItem({\n          type: 'list',\n          isListItem: false,\n          cards: [],\n          ...LIST_DEFAULT_POSITION,\n        })}\n      >\n        Add List\n      </button>\n      {anotherUserIsRecording && (\n        <p className=\"interactionMessage\">Another user is recording</p>\n      )}\n      <DroppableBackground\n        boxes={boxes}\n        updateBoxes={updateBoxes}\n        setDisableAll={setDisableAll}\n      />\n      {boxes.map((box) => (\n        <DraggableItems\n          key={box.id}\n          setDisableAll={setDisableAll}\n          fullDisable={fullDisable}\n          updateBoxes={updateBoxes}\n          currentBox={box}\n          boxes={boxes}\n          socket={socket}\n        />\n      ))}\n    </StyledApp>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}