{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mfjvacas/Documents/Dev/GitHub/projects/mapstereo-client/components/Box.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Check, Edit } from 'react-feather';\nimport styled from 'styled-components';\nimport cn from 'classnames';\nimport update from 'immutability-helper';\nconst StyledBox = styled.div.withConfig({\n  displayName: \"Box__StyledBox\",\n  componentId: \"sc-5nohr3-0\"\n})([\"border:1px dashed gray;background-color:white;cursor:move;padding-top:15px;&.isList{padding-top:0;}& .child{padding:0.5rem 1rem;& + button{position:absolute;top:0;right:0;}}\"]);\n\nconst Box = ({\n  box,\n  children,\n  fullDisable,\n  deleteBox,\n  boxes,\n  updateBoxes\n}) => {\n  const {\n    id,\n    title,\n    type\n  } = box;\n  const {\n    0: edit,\n    1: setEdit\n  } = useState(false);\n  const {\n    0: editedTitle,\n    1: setEditedTitle\n  } = useState(title);\n  useEffect(() => {\n    if (!edit && editedTitle !== title) {\n      const cardIndex = boxes.findIndex(box => box.id === id);\n      const newBoxes = update(boxes, {\n        [cardIndex]: {\n          $set: _objectSpread(_objectSpread({}, boxes[cardIndex]), {}, {\n            title: editedTitle\n          })\n        }\n      });\n      updateBoxes(newBoxes);\n    }\n  }, [edit]);\n  return /*#__PURE__*/_jsxDEV(StyledBox, {\n    className: cn({\n      isList: type === 'list'\n    }),\n    children: [!edit ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [title, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"icons\",\n        onClick: () => {\n          setEditedTitle(title);\n          setEdit(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(Edit, {\n          size: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedTitle,\n        onChange: e => setEditedTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"icons\",\n        onClick: () => setEdit(false),\n        children: /*#__PURE__*/_jsxDEV(Check, {\n          size: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"child\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: fullDisable,\n      onClick: () => deleteBox(id),\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Box;","map":{"version":3,"sources":["/Users/mfjvacas/Documents/Dev/GitHub/projects/mapstereo-client/components/Box.tsx"],"names":["React","useState","useEffect","Check","Edit","styled","cn","update","StyledBox","div","Box","box","children","fullDisable","deleteBox","boxes","updateBoxes","id","title","type","edit","setEdit","editedTitle","setEditedTitle","cardIndex","findIndex","newBoxes","$set","isList","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Check, Edit } from 'react-feather';\nimport styled from 'styled-components';\nimport cn from 'classnames';\nimport update from 'immutability-helper';\nimport BoxType from './types/box';\n\ninterface Props {\n  boxes: Array<BoxType>;\n  box: BoxType;\n  children?: React.ReactElement;\n  fullDisable?: boolean;\n  deleteBox?: Function;\n  updateBoxes: (boxes: Array<BoxType>) => void;\n}\n\nconst StyledBox = styled.div`\n  border: 1px dashed gray;\n  background-color: white;\n  cursor: move;\n  padding-top: 15px;\n\n  &.isList {\n    padding-top: 0;\n  }\n\n  & .child {\n    padding: 0.5rem 1rem;\n\n    & + button {\n      position: absolute;\n      top: 0;\n      right: 0;\n    }\n  }\n`;\n\nconst Box = ({\n  box,\n  children,\n  fullDisable,\n  deleteBox,\n  boxes,\n  updateBoxes,\n}: Props) => {\n  const { id, title, type } = box;\n  const [edit, setEdit] = useState(false);\n  const [editedTitle, setEditedTitle] = useState(title);\n\n  useEffect(() => {\n    if (!edit && editedTitle !== title) {\n      const cardIndex = boxes.findIndex((box) => box.id === id);\n      const newBoxes = update(boxes, {\n        [cardIndex]: {\n          $set: {\n            ...boxes[cardIndex],\n            title: editedTitle,\n          },\n        },\n      });\n      updateBoxes(newBoxes);\n    }\n  }, [edit]);\n\n  return (\n    <StyledBox\n      className={cn({\n        isList: type === 'list',\n      })}\n    >\n      {!edit ? (\n        <React.Fragment>\n          {title}{' '}\n          <span\n            className=\"icons\"\n            onClick={() => {\n              setEditedTitle(title);\n              setEdit(true);\n            }}\n          >\n            <Edit size={12} />\n          </span>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <input\n            type=\"text\"\n            value={editedTitle}\n            onChange={(e) => setEditedTitle(e.target.value)}\n          />{' '}\n          <span className=\"icons\" onClick={() => setEdit(false)}>\n            <Check size={12} />\n          </span>\n        </React.Fragment>\n      )}\n      <div className=\"child\">{children}</div>\n      <button disabled={fullDisable} onClick={() => deleteBox(id)}>\n        delete\n      </button>\n    </StyledBox>\n  );\n};\n\nexport default Box;\n"]},"metadata":{},"sourceType":"module"}