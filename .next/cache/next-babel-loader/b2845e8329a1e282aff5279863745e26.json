{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport styled from 'styled-components';\nvar StyledDraggable = styled.div(_templateObject());\n_c = StyledDraggable;\n\nvar DraggableContainer = function DraggableContainer(_ref) {\n  _s();\n\n  var id = _ref.id,\n      left = _ref.left,\n      top = _ref.top,\n      type = _ref.type,\n      children = _ref.children,\n      title = _ref.title,\n      blobUrl = _ref.blobUrl;\n\n  var _useDrag = useDrag({\n    item: {\n      id: id,\n      left: left,\n      top: top,\n      title: title,\n      blobUrl: blobUrl,\n      type: type\n    },\n    collect: function collect(monitor) {\n      return {\n        isDragging: monitor.isDragging()\n      };\n    }\n  }),\n      _useDrag2 = _slicedToArray(_useDrag, 2),\n      isDragging = _useDrag2[0].isDragging,\n      drag = _useDrag2[1];\n\n  if (isDragging) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: drag\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(StyledDraggable, {\n    ref: drag,\n    style: {\n      left: left,\n      top: top\n    }\n  }, children);\n};\n\n_s(DraggableContainer, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n\n_c2 = DraggableContainer;\nexport default DraggableContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledDraggable\");\n$RefreshReg$(_c2, \"DraggableContainer\");","map":{"version":3,"sources":["/Users/mfjvacas/Documents/Dev/GitHub/projects/mapstereo-client/components/DraggableContainer.tsx"],"names":["React","useDrag","styled","StyledDraggable","div","DraggableContainer","id","left","top","type","children","title","blobUrl","item","collect","monitor","isDragging","drag"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAcA,IAAMC,eAAe,GAAGD,MAAM,CAACE,GAAV,mBAArB;KAAMD,e;;AAIN,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,OAQd;AAAA;;AAAA,MAPXC,EAOW,QAPXA,EAOW;AAAA,MANXC,IAMW,QANXA,IAMW;AAAA,MALXC,GAKW,QALXA,GAKW;AAAA,MAJXC,IAIW,QAJXA,IAIW;AAAA,MAHXC,QAGW,QAHXA,QAGW;AAAA,MAFXC,KAEW,QAFXA,KAEW;AAAA,MADXC,OACW,QADXA,OACW;;AAAA,iBAEoBX,OAAO,CAAC;AACrCY,IAAAA,IAAI,EAAE;AACJP,MAAAA,EAAE,EAAFA,EADI;AAEJC,MAAAA,IAAI,EAAJA,IAFI;AAGJC,MAAAA,GAAG,EAAHA,GAHI;AAIJG,MAAAA,KAAK,EAALA,KAJI;AAKJC,MAAAA,OAAO,EAAPA,OALI;AAMJH,MAAAA,IAAI,EAAJA;AANI,KAD+B;AASrCK,IAAAA,OAAO,EAAE,iBAACC,OAAD;AAAA,aAAc;AACrBC,QAAAA,UAAU,EAAED,OAAO,CAACC,UAAR;AADS,OAAd;AAAA;AAT4B,GAAD,CAF3B;AAAA;AAAA,MAEFA,UAFE,gBAEFA,UAFE;AAAA,MAEYC,IAFZ;;AAeX,MAAID,UAAJ,EAAgB;AACd,wBAAO;AAAK,MAAA,GAAG,EAAEC;AAAV,MAAP;AACD;;AAED,sBACE,oBAAC,eAAD;AACE,IAAA,GAAG,EAAEA,IADP;AAEE,IAAA,KAAK,EAAE;AAAEV,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,GAAG,EAAHA;AAAR;AAFT,KAIGE,QAJH,CADF;AAQD,CAnCD;;GAAML,kB;UAU2BJ,O;;;MAV3BI,kB;AAqCN,eAAeA,kBAAf","sourcesContent":["import React from 'react';\nimport { useDrag } from 'react-dnd';\nimport styled from 'styled-components';\n\ninterface Props {\n  id: number;\n  left?: number;\n  top?: number;\n  children?: React.ReactElement;\n  type?: string;\n  title?: string;\n  blobUrl?: string;\n  fullDisable?: boolean;\n  deleteBox?: Function;\n}\n\nconst StyledDraggable = styled.div`\n  position: absolute;\n`;\n\nconst DraggableContainer = ({\n  id,\n  left,\n  top,\n  type,\n  children,\n  title,\n  blobUrl,\n}: Props) => {\n\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      id,\n      left,\n      top,\n      title,\n      blobUrl,\n      type,\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n  if (isDragging) {\n    return <div ref={drag} />;\n  }\n\n  return (\n    <StyledDraggable\n      ref={drag}\n      style={{ left, top } as React.CSSProperties}\n    >\n      {children}\n    </StyledDraggable>\n  );\n};\n\nexport default DraggableContainer;\n"]},"metadata":{},"sourceType":"module"}