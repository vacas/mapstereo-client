{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  border: 1px dashed gray;\\n  background-color: white;\\n  cursor: move;\\n  padding-top: 15px;\\n\\n  &.isList {\\n    padding-top: 0;\\n  }\\n\\n  & .child {\\n    padding: 0.5rem 1rem;\\n\\n    & + button {\\n      position: absolute;\\n      top: 0;\\n      right: 0;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { Check, Edit } from 'react-feather';\nimport styled from 'styled-components';\nimport cn from 'classnames';\nimport update from 'immutability-helper';\nvar StyledBox = styled.div(_templateObject());\n_c = StyledBox;\n\nvar Box = function Box(_ref) {\n  _s();\n\n  var box = _ref.box,\n      children = _ref.children,\n      fullDisable = _ref.fullDisable,\n      deleteBox = _ref.deleteBox,\n      boxes = _ref.boxes,\n      updateBoxes = _ref.updateBoxes;\n  var id = box.id,\n      title = box.title,\n      type = box.type;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      edit = _useState2[0],\n      setEdit = _useState2[1];\n\n  var _useState3 = useState(title),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editedTitle = _useState4[0],\n      setEditedTitle = _useState4[1];\n\n  useEffect(function () {\n    if (!edit && editedTitle !== title) {\n      var cardIndex = boxes.findIndex(function (box) {\n        return box.id === id;\n      });\n      var newBoxes = update(boxes, _defineProperty({}, cardIndex, {\n        $set: _objectSpread(_objectSpread({}, boxes[cardIndex]), {}, {\n          title: editedTitle\n        })\n      }));\n      updateBoxes(newBoxes);\n    }\n  }, [edit]);\n  return /*#__PURE__*/React.createElement(StyledBox, {\n    className: cn({\n      isList: type === 'list'\n    })\n  }, !edit ? /*#__PURE__*/React.createElement(React.Fragment, null, title, ' ', /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icons\",\n    onClick: function onClick() {\n      setEditedTitle(title);\n      setEdit(true);\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    size: 12\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: editedTitle,\n    onChange: function onChange(e) {\n      return setEditedTitle(e.target.value);\n    }\n  }), ' ', /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icons\",\n    onClick: function onClick() {\n      return setEdit(false);\n    }\n  }, /*#__PURE__*/React.createElement(Check, {\n    size: 12\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"child\"\n  }, children), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: fullDisable,\n    onClick: function onClick() {\n      return deleteBox(id);\n    }\n  }, \"delete\"));\n};\n\n_s(Box, \"PUpuVSC/uOeWlB8AcZGLQ4Dvp2o=\");\n\n_c2 = Box;\nexport default Box;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledBox\");\n$RefreshReg$(_c2, \"Box\");","map":{"version":3,"sources":["/Users/mfjvacas/Documents/Dev/GitHub/projects/mapstereo-client/components/Box.tsx"],"names":["React","useState","useEffect","Check","Edit","styled","cn","update","StyledBox","div","Box","box","children","fullDisable","deleteBox","boxes","updateBoxes","id","title","type","edit","setEdit","editedTitle","setEditedTitle","cardIndex","findIndex","newBoxes","$set","isList","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Check, Edit } from 'react-feather';\nimport styled from 'styled-components';\nimport cn from 'classnames';\nimport update from 'immutability-helper';\nimport BoxType from './types/box';\n\ninterface Props {\n  boxes: Array<BoxType>;\n  box: BoxType;\n  children?: React.ReactElement;\n  fullDisable?: boolean;\n  deleteBox?: Function;\n  updateBoxes: (boxes: Array<BoxType>) => void;\n}\n\nconst StyledBox = styled.div`\n  border: 1px dashed gray;\n  background-color: white;\n  cursor: move;\n  padding-top: 15px;\n\n  &.isList {\n    padding-top: 0;\n  }\n\n  & .child {\n    padding: 0.5rem 1rem;\n\n    & + button {\n      position: absolute;\n      top: 0;\n      right: 0;\n    }\n  }\n`;\n\nconst Box = ({\n  box,\n  children,\n  fullDisable,\n  deleteBox,\n  boxes,\n  updateBoxes,\n}: Props) => {\n  const { id, title, type } = box;\n  const [edit, setEdit] = useState(false);\n  const [editedTitle, setEditedTitle] = useState(title);\n\n  useEffect(() => {\n    if (!edit && editedTitle !== title) {\n      const cardIndex = boxes.findIndex((box) => box.id === id);\n      const newBoxes = update(boxes, {\n        [cardIndex]: {\n          $set: {\n            ...boxes[cardIndex],\n            title: editedTitle,\n          },\n        },\n      });\n      updateBoxes(newBoxes);\n    }\n  }, [edit]);\n\n  return (\n    <StyledBox\n      className={cn({\n        isList: type === 'list',\n      })}\n    >\n      {!edit ? (\n        <React.Fragment>\n          {title}{' '}\n          <span\n            className=\"icons\"\n            onClick={() => {\n              setEditedTitle(title);\n              setEdit(true);\n            }}\n          >\n            <Edit size={12} />\n          </span>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <input\n            type=\"text\"\n            value={editedTitle}\n            onChange={(e) => setEditedTitle(e.target.value)}\n          />{' '}\n          <span className=\"icons\" onClick={() => setEdit(false)}>\n            <Check size={12} />\n          </span>\n        </React.Fragment>\n      )}\n      <div className=\"child\">{children}</div>\n      <button disabled={fullDisable} onClick={() => deleteBox(id)}>\n        delete\n      </button>\n    </StyledBox>\n  );\n};\n\nexport default Box;\n"]},"metadata":{},"sourceType":"module"}