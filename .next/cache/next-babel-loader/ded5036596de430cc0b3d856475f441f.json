{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mfjvacas/Documents/Dev/GitHub/projects/mapstereo-client/components/App.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport socketIOClient from 'socket.io-client';\nimport { getCursorElement, supportsMediaRecorder, isServer } from './helper';\nimport maxBy from 'lodash/maxBy';\nimport DroppableBackground from './DroppableBackground';\nimport DraggableItems from './DraggableItems';\nconst socket = !isServer && socketIOClient(`${false ? 'wss' : 'ws'}://${window.location.host}`, {\n  secure: false\n});\nconst DEFAULT_POSITION = {\n  top: 180,\n  left: 20\n};\nconst LIST_DEFAULT_POSITION = {\n  top: 20,\n  left: 180\n};\nconst StyledApp = styled.div.withConfig({\n  displayName: \"App__StyledApp\",\n  componentId: \"sc-4z2li1-0\"\n})([\"position:relative;overflow:hidden;& .globalAddButton{position:absolute;top:0;z-index:5;left:0;&#addList{left:80px;}}.interactionMessage{position:absolute;top:20px;z-index:5;left:10px;font-size:11px;color:red;}.icons{transition:all 250ms;&:hover{cursor:pointer;opacity:0.5;}}.dropzone{display:flex;justify-content:center;align-items:center;height:50px;border:1px dashed black;position:relative;transition:opacity 500ms;&.hovering{opacity:0.5;}& .dropzoneStatus{background-color:rgba(0,0,0,0.5);height:100%;width:100%;position:absolute;}}\"]);\n/*\n  TODO LIST:\n  - emit message on socket to block box or card if it is being recorded on another side (currently blocks all buttons)\n  - display cursor (https://stackoverflow.com/questions/34162200/displaying-cursor-on-every-connected-client-in-socket-io)\n*/\n\n_c = StyledApp;\n\nconst App = () => {\n  _s();\n\n  const mediaRecorderIsSupported = supportsMediaRecorder();\n  const {\n    0: fullDisable,\n    1: setDisableAll\n  } = useState(!supportsMediaRecorder);\n  const {\n    0: anotherUserIsRecording,\n    1: setIsRecording\n  } = useState(false);\n  const {\n    0: boxes,\n    1: setBoxes\n  } = useState([]); // if mediaRecorder is not supported, then set alert\n\n  useEffect(() => {\n    if (!mediaRecorderIsSupported) {\n      alert('User Media API not supported.');\n    }\n  }, [mediaRecorderIsSupported]); // all socket responses handled here\n\n  useEffect(() => {\n    socket.on('connect', data => {\n      console.log('WebSocket Client Connected');\n    });\n    socket.on('receivingChanges', data => {\n      const res = data || {\n        lists: [],\n        boxes: []\n      };\n\n      if (res.boxes) {\n        setBoxes(res.boxes);\n      }\n    });\n    socket.on('recordingInProgress', data => {\n      const res = data || {\n        recording: false\n      };\n      console.log('res', res);\n      setDisableAll(res.recording);\n      setIsRecording(res.recording);\n    });\n    socket.on('draw_cursor', data => {\n      const res = data;\n      const el = getCursorElement(res.id);\n      el.style.top = res.line[0].x;\n      el.style.left = res.line[0].y;\n    });\n  }, []);\n\n  const addItem = obj => () => {\n    const maxBoxId = maxBy(boxes, 'id');\n    const boxId = !maxBoxId ? 0 : maxBoxId.id + 1;\n    const newBoxes = [...boxes, _objectSpread(_objectSpread({\n      id: boxId\n    }, obj), {}, {\n      title: `box #${boxId}`\n    })];\n    updateBoxes(newBoxes);\n  };\n\n  const updateBoxes = updatedBoxes => {\n    setBoxes(updatedBoxes);\n    socket.emit('sendingChanges', {\n      boxes: updatedBoxes\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(StyledApp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    },\n    __self: this\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"addCard\",\n    className: \"globalAddButton\",\n    disabled: fullDisable,\n    onClick: addItem(_objectSpread({\n      type: 'card',\n      isListItem: false\n    }, DEFAULT_POSITION)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    },\n    __self: this\n  }, \"Add Card\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"addList\",\n    className: \"globalAddButton\",\n    disabled: fullDisable,\n    onClick: addItem(_objectSpread({\n      type: 'list',\n      isListItem: false,\n      cards: []\n    }, LIST_DEFAULT_POSITION)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    },\n    __self: this\n  }, \"Add List\"), anotherUserIsRecording && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"interactionMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    },\n    __self: this\n  }, \"Another user is recording\"), /*#__PURE__*/React.createElement(DroppableBackground, {\n    boxes: boxes,\n    updateBoxes: updateBoxes,\n    setDisableAll: setDisableAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    },\n    __self: this\n  }), boxes.map(box => /*#__PURE__*/React.createElement(DraggableItems, {\n    key: box.id,\n    setDisableAll: setDisableAll,\n    fullDisable: fullDisable,\n    updateBoxes: updateBoxes,\n    currentBox: box,\n    boxes: boxes,\n    socket: socket,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    },\n    __self: this\n  })));\n};\n\n_s(App, \"1r8ihiQH9yZ3ZAiv61AO2YB1Cy0=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledApp\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/mfjvacas/Documents/Dev/GitHub/projects/mapstereo-client/components/App.tsx"],"names":["React","useState","useEffect","styled","socketIOClient","getCursorElement","supportsMediaRecorder","isServer","maxBy","DroppableBackground","DraggableItems","socket","window","location","host","secure","DEFAULT_POSITION","top","left","LIST_DEFAULT_POSITION","StyledApp","div","App","mediaRecorderIsSupported","fullDisable","setDisableAll","anotherUserIsRecording","setIsRecording","boxes","setBoxes","alert","on","data","console","log","res","lists","recording","el","id","style","line","x","y","addItem","obj","maxBoxId","boxId","newBoxes","title","updateBoxes","updatedBoxes","emit","type","isListItem","cards","map","box"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport update from 'immutability-helper';\nimport socketIOClient from 'socket.io-client';\nimport { getCursorElement, supportsMediaRecorder, isServer } from './helper';\nimport maxBy from 'lodash/maxBy';\nimport DroppableBackground from './DroppableBackground';\nimport DraggableItems from './DraggableItems';\nimport Box from './types/box';\n\nconst socket = !isServer && socketIOClient(\n  `${process.env.NODE_ENV === 'production' ? 'wss' : 'ws'}://${\n    window.location.host\n  }`,\n  {\n    secure: process.env.NODE_ENV === 'production',\n  }\n);\n\nconst DEFAULT_POSITION = {\n  top: 180,\n  left: 20,\n};\n\nconst LIST_DEFAULT_POSITION = {\n  top: 20,\n  left: 180,\n};\n\nconst StyledApp = styled.div`\n  position: relative;\n  overflow: hidden;\n\n  & .globalAddButton {\n    position: absolute;\n    top: 0;\n    z-index: 5;\n    left: 0;\n\n    &#addList {\n      left: 80px;\n    }\n  }\n\n  .interactionMessage {\n    position: absolute;\n    top: 20px;\n    z-index: 5;\n    left: 10px;\n    font-size: 11px;\n    color: red;\n  }\n\n  .icons {\n    transition: all 250ms;\n    &:hover {\n      cursor: pointer;\n      opacity: 0.5;\n    }\n  }\n\n  .dropzone {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 50px;\n    border: 1px dashed black;\n    position: relative;\n    transition: opacity 500ms;\n\n    &.hovering {\n      opacity: 0.5;\n    }\n\n    & .dropzoneStatus {\n      background-color: rgba(0, 0, 0, 0.5);\n      height: 100%;\n      width: 100%;\n      position: absolute;\n    }\n  }\n`;\n\n/*\n  TODO LIST:\n  - emit message on socket to block box or card if it is being recorded on another side (currently blocks all buttons)\n  - display cursor (https://stackoverflow.com/questions/34162200/displaying-cursor-on-every-connected-client-in-socket-io)\n*/\n\nconst App = () => {\n  const mediaRecorderIsSupported = supportsMediaRecorder();\n  const [fullDisable, setDisableAll] = useState(!supportsMediaRecorder);\n  const [anotherUserIsRecording, setIsRecording] = useState(false);\n  const [boxes, setBoxes] = useState([]);\n\n  // if mediaRecorder is not supported, then set alert\n  useEffect(() => {\n    if (!mediaRecorderIsSupported) {\n      alert('User Media API not supported.');\n    }\n  }, [mediaRecorderIsSupported]);\n\n  // all socket responses handled here\n  useEffect(() => {\n    socket.on('connect', (data) => {\n      console.log('WebSocket Client Connected');\n    });\n    socket.on('receivingChanges', (data) => {\n      const res = data || { lists: [], boxes: [] };\n\n      if (res.boxes) {\n        setBoxes(res.boxes);\n      }\n    });\n    socket.on('recordingInProgress', (data) => {\n      const res = data || { recording: false };\n\n      console.log('res', res);\n\n      setDisableAll(res.recording);\n      setIsRecording(res.recording);\n    });\n    socket.on('draw_cursor', (data) => {\n      const res = data;\n      const el = getCursorElement(res.id) as HTMLElement;\n      el.style.top = res.line[0].x;\n      el.style.left = res.line[0].y;\n    });\n  }, []);\n\n  const addItem = (obj) => () => {\n    const maxBoxId = maxBy(boxes, 'id');\n    const boxId = !maxBoxId ? 0 : maxBoxId.id + 1;\n    const newBoxes = [\n      ...boxes,\n      {\n        id: boxId,\n        ...obj,\n        title: `box #${boxId}`,\n      },\n    ];\n    updateBoxes(newBoxes);\n  };\n\n  const updateBoxes = (updatedBoxes: Array<Box>): void => {\n    setBoxes(updatedBoxes);\n    socket.emit('sendingChanges', {\n      boxes: updatedBoxes,\n    });\n  };\n\n  return (\n    <StyledApp>\n      <button\n        id=\"addCard\"\n        className=\"globalAddButton\"\n        disabled={fullDisable}\n        onClick={addItem({\n          type: 'card',\n          isListItem: false,\n          ...DEFAULT_POSITION,\n        })}\n      >\n        Add Card\n      </button>\n      <button\n        id=\"addList\"\n        className=\"globalAddButton\"\n        disabled={fullDisable}\n        onClick={addItem({\n          type: 'list',\n          isListItem: false,\n          cards: [],\n          ...LIST_DEFAULT_POSITION,\n        })}\n      >\n        Add List\n      </button>\n      {anotherUserIsRecording && (\n        <p className=\"interactionMessage\">Another user is recording</p>\n      )}\n      <DroppableBackground\n        boxes={boxes}\n        updateBoxes={updateBoxes}\n        setDisableAll={setDisableAll}\n      />\n      {boxes.map((box) => (\n        <DraggableItems\n          key={box.id}\n          setDisableAll={setDisableAll}\n          fullDisable={fullDisable}\n          updateBoxes={updateBoxes}\n          currentBox={box}\n          boxes={boxes}\n          socket={socket}\n        />\n      ))}\n    </StyledApp>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}