{"ast":null,"code":"const S3 = require('aws-sdk/clients/s3'); // const multer = require('multer');\n// const upload = multer();\n\n\nconst s3 = new S3({\n  apiVersion: '2006-03-01'\n});\nexport default async function handler(req, res) {\n  if (req.method === 'POST') {\n    console.log('req.file', req.file);\n    await s3.upload({\n      Bucket: process.env.AWS_BUCKET,\n      Key: req.file.originalname,\n      Body: Buffer.from(new Uint8Array(req.file.buffer))\n    }, async (err, data) => {\n      if (err) {\n        console.log('error: ', err);\n        res.sendStatus(404);\n      }\n\n      res.send(`https://${process.env.AWS_BUCKET}/${escape(req.file.originalname)}`);\n    });\n  }\n}","map":{"version":3,"sources":["/Users/mfjvacas/Documents/Dev/GitHub/projects/mapstereo-client/pages/api/upload.ts"],"names":["S3","require","s3","apiVersion","handler","req","res","method","console","log","file","upload","Bucket","process","env","AWS_BUCKET","Key","originalname","Body","Buffer","from","Uint8Array","buffer","err","data","sendStatus","send","escape"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,oBAAD,CAAlB,C,CACA;AACA;;;AAEA,MAAMC,EAAE,GAAG,IAAIF,EAAJ,CAAO;AAAEG,EAAAA,UAAU,EAAE;AAAd,CAAP,CAAX;AAGA,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC9C,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,GAAG,CAACK,IAA5B;AAEA,UAAMR,EAAE,CAACS,MAAH,CACJ;AACEC,MAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,UADtB;AAEEC,MAAAA,GAAG,EAAEX,GAAG,CAACK,IAAJ,CAASO,YAFhB;AAGEC,MAAAA,IAAI,EAAEC,MAAM,CAACC,IAAP,CAAY,IAAIC,UAAJ,CAAehB,GAAG,CAACK,IAAJ,CAASY,MAAxB,CAAZ;AAHR,KADI,EAMJ,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AACnB,UAAID,GAAJ,EAAS;AACPf,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBc,GAAvB;AACAjB,QAAAA,GAAG,CAACmB,UAAJ,CAAe,GAAf;AACD;;AAEDnB,MAAAA,GAAG,CAACoB,IAAJ,CACG,WAAUb,OAAO,CAACC,GAAR,CAAYC,UAAW,IAAGY,MAAM,CAACtB,GAAG,CAACK,IAAJ,CAASO,YAAV,CAAwB,EADrE;AAGD,KAfG,CAAN;AAiBD;AACF","sourcesContent":["const S3 = require('aws-sdk/clients/s3');\n// const multer = require('multer');\n// const upload = multer();\n\nconst s3 = new S3({ apiVersion: '2006-03-01' });\n\n\nexport default async function handler(req, res) {\n  if (req.method === 'POST') {\n    console.log('req.file', req.file);\n    \n    await s3.upload(\n      {\n        Bucket: process.env.AWS_BUCKET,\n        Key: req.file.originalname,\n        Body: Buffer.from(new Uint8Array(req.file.buffer)),\n      },\n      async (err, data) => {\n        if (err) {\n          console.log('error: ', err);\n          res.sendStatus(404);\n        }\n  \n        res.send(\n          `https://${process.env.AWS_BUCKET}/${escape(req.file.originalname)}`\n        );\n      }\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}